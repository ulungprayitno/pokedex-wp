{"version":3,"sources":["components/content/index.js","pages/detail/index.js","utils/api.js","utils/constant.js","hooks/use-lazy-fetch.js"],"names":["Content","props","w","bg","p","borderRadius","boxShadow","position","mt","fontSize","fontWeight","mb","name","direction","types","map","x","i","type","src","sprites","front_default","h","bottom","right","weight","height","abilities","ability","stats","stat","base_stat","Detail","useLazyFetch","data","details","compare","loading","error","getDetailByName","fetchData","useEffect","match","params","templateColumns","gap","placeholder","onChange","e","target","value","item","index","api","axios","create","baseURL","timeout","actionsType","initialState","offset","reducer","produce","draft","actions","payload","isEqual","concat","Error","useReducer","state","dispatch","useCallback","a","get","limit","res","response","results","Promise","all","pokemon","id","fetchDataFilter","url","console","log","kampret","forms","getTypes"],"mappings":"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","file":"static/js/5.d1e91d35.chunk.js","sourcesContent":["import { Box, Image, Text, Tabs, TabList, Tab, TabPanel, TabPanels, Stack } from \"@chakra-ui/react\";\r\n\r\nconst Content = (props) => {\r\n    return (\r\n        <Box>\r\n            <Box w=\"100%\" bg=\"whatsapp.300\" p='8px' borderRadius='8px' boxShadow='lg' position='relative' mt='30px'>\r\n                <Text fontSize='32px' fontWeight='bold' mb='4px'>{props.name}</Text>\r\n                <Stack direction=\"row\">\r\n                {\r\n                    props.types.map((x, i) => (\r\n                    <Box key={i}  bg='whiteAlpha.800' w='fit-content' p='4px 16px' borderRadius='8px' mb='4px'>{x.type.name}</Box>\r\n                    ))\r\n                }\r\n                </Stack>\r\n                <Image src={props.sprites.front_default} h='120px' w='auto' position='absolute' bottom='0' right='0'/>\r\n            </Box>\r\n            <Box bg='whiteAlpha.900'>\r\n                <Tabs>\r\n                    <TabList>\r\n                        <Tab>Basic Attributes</Tab>\r\n                        <Tab>Abilities</Tab>\r\n                        <Tab>Stats</Tab>\r\n                    </TabList>\r\n                    <TabPanels>\r\n                        <TabPanel>\r\n                            <Text fontSize='16px' mb='4px'>Weight : {props.weight}</Text>\r\n                            <Text fontSize='16px' mb='4px'>Height : {props.height}</Text>\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                            {\r\n                                props.abilities.map((x, i) => (\r\n                                    <Text key={i} fontSize='16px' mb='4px'>{x.ability.name}</Text>\r\n                                ))\r\n                            }\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                            {\r\n                                props.stats.map((x, i) => (\r\n                                    <Text key={i} fontSize='16px' mb='4px'>{x.stat.name} : {x.base_stat}</Text>\r\n                                ))\r\n                            }\r\n                        </TabPanel>\r\n                    </TabPanels>\r\n                </Tabs>\r\n            </Box>                    \r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Content;","import { Box, Image, Text, Grid, Tabs, TabList, Tab, TabPanel, TabPanels, Stack, Skeleton, Select } from \"@chakra-ui/react\";\r\nimport { useLazyFetch } from '../../hooks/use-lazy-fetch';\r\nimport { useEffect, useState } from \"react\";\r\nimport Content from \"../../components/content\";\r\n\r\nconst Detail = (props) => {\r\n    const [{ data, details, compare, loading, error }, {getDetailByName, fetchData}] = useLazyFetch();\r\n    \r\n    useEffect(() => {\r\n        getDetailByName(props.match.params.name)\r\n        fetchData({compare : true});\r\n    },[]);\r\n\r\n    if(loading || !details || !data){\r\n        return (\r\n            <Box mt='76px' p='24px'>\r\n                <Grid templateColumns=\"repeat(2, 1fr)\" gap={6}>\r\n                    <Skeleton h='200px' borderRadius='8px'/>\r\n                </Grid>\r\n            </Box>\r\n        )\r\n    }\r\n  \r\n    if(error){\r\n        return <Text> Something went wrong! </Text>\r\n    }\r\n\r\n    const onCompare = (e) => {\r\n        getDetailByName(e.target.value, true);\r\n    }\r\n    return (\r\n        <Box mt='76px' p='24px'>\r\n            <Box position='relative' mb='16px' w='auto'>\r\n                <Select placeholder=\"Compare With\" onChange={onCompare}>\r\n                    { data.map((item, index) => (\r\n                        <option key={index} value={item.name}>{item.name}</option>\r\n                    )) }\r\n                </Select>\r\n            </Box>\r\n\r\n            <Grid templateColumns=\"repeat(2, 1fr)\" gap={6}>\r\n                <Content {...details} />\r\n                \r\n                { compare && (\r\n                    <Content {...compare} />\r\n                )}\r\n            </Grid>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Detail;","import axios  from \"axios\";\r\nimport { BaseUrl } from \"./constant\";\r\n\r\nconst api = axios.create({\r\n    baseURL: BaseUrl,\r\n    timeout: 10000\r\n})\r\n\r\nexport default api","export const BaseUrl = 'https://pokeapi.co/api/v2';","import { useCallback, useReducer, useState } from 'react'\r\nimport produce from 'immer'\r\nimport isEqual from 'react-fast-compare'\r\nimport api from '../utils/api'\r\n\r\nconst actionsType = {\r\n  SET_FETCHING: 'SET_FETCHING',\r\n  SET_SUCCESS: 'SET_SUCCESS',\r\n  SET_ERROR: 'SET_ERROR',\r\n  SET_SUCCESS_DETAIL: 'SET_SUCCESS_DETAIL',\r\n  SET_SUCCESS_TYPE: 'SET_SUCCESS_TYPE',\r\n}\r\n\r\nconst initialState = {\r\n  data: null,\r\n  loading: false,\r\n  error: null,\r\n  details: null,\r\n  compare: null,\r\n  types: null,\r\n  offset: 0\r\n}\r\n\r\nconst reducer = produce((draft, actions) => {\r\n  const { type, payload = {} } = actions\r\n  switch (type) {\r\n    case actionsType.SET_FETCHING:\r\n      draft.loading = true\r\n      draft.error = null\r\n      return\r\n    case actionsType.SET_SUCCESS:\r\n      if (!isEqual(draft.data, payload.data)) {\r\n        draft.data = draft.data ? draft.data.concat(payload.data) : payload.data \r\n        draft.offset = draft.offset + 20\r\n        draft.loading = false\r\n      }\r\n      return\r\n    case actionsType.SET_SUCCESS_DETAIL:\r\n      if(!isEqual(draft.details, payload.data) || isEqual(draft.compare, payload.data)) {\r\n        if(payload.compare) draft.compare = payload.data\r\n        else draft.details = payload.data\r\n        draft.loading = false\r\n      }\r\n      return\r\n    case actionsType.SET_SUCCESS_TYPE:\r\n      if (!isEqual(draft.types, payload.data)) {\r\n        draft.types = payload.data\r\n        draft.loading = false\r\n      }\r\n      return\r\n    case actionsType.SET_ERROR:\r\n      draft.error = payload.error\r\n      draft.loading = false\r\n      return\r\n    default:\r\n      throw new Error('Unknown action type')\r\n  }\r\n})\r\n\r\nexport const useLazyFetch = () => {\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n  const { data, loading, error, details, compare, types, offset } = state\r\n  \r\n  const fetchData = useCallback( async ({compare}) => {\r\n    dispatch({\r\n      type: actionsType.SET_FETCHING,\r\n    });\r\n\r\n    const res = await api.get('/pokemon', {\r\n      params: {\r\n        limit: compare ? 10220 : 20,\r\n        offset\r\n      } \r\n    });\r\n    if(res){\r\n      let response = res.data.results;\r\n      if (!compare) {\r\n        response = await Promise.all(\r\n          res.data.results.map(async item => {\r\n            const p = await api.get(`/pokemon/${item.name}`)\r\n            const pokemon = p.data\r\n            if(pokemon){\r\n              return {\r\n                id: pokemon.id,\r\n                name: pokemon.name,\r\n                types: pokemon.types,\r\n                sprites: pokemon.sprites\r\n              }            \r\n            }\r\n          })\r\n        ) \r\n      }\r\n\r\n      dispatch({\r\n        type: actionsType.SET_SUCCESS,\r\n        payload: {\r\n          data: response,\r\n        },\r\n      })\r\n    } else {\r\n      dispatch({\r\n        type: actionsType.SET_ERROR,\r\n        payload: {\r\n          error: res,\r\n        },\r\n      })\r\n    }\r\n  }, [offset]);\r\n\r\n  const fetchDataFilter = useCallback( async (url) => {\r\n    dispatch({\r\n      type: actionsType.SET_FETCHING,\r\n    });\r\n    console.log({kampret : url})\r\n    const res = await api.get(url);\r\n    if(res){\r\n      let response = await Promise.all(\r\n        res.data.pokemon.map(async item => {\r\n          const p = await api.get(`/pokemon/${item.pokemon.name}`)\r\n          const pokemon = p.data\r\n          if(pokemon){\r\n            return {\r\n              id: pokemon.id,\r\n              name: pokemon.name,\r\n              types: pokemon.types,\r\n              sprites: pokemon.sprites\r\n            }            \r\n          }\r\n        })\r\n      )\r\n      dispatch({\r\n        type: actionsType.SET_SUCCESS,\r\n        payload: {\r\n          data: response,\r\n        },\r\n      })\r\n    } else {\r\n      dispatch({\r\n        type: actionsType.SET_ERROR,\r\n        payload: {\r\n          error: res,\r\n        },\r\n      })\r\n    }\r\n  }, []);\r\n\r\n  const getDetailByName = useCallback(async (name, compare = false) => {\r\n    dispatch({\r\n      type: actionsType.SET_FETCHING,\r\n    });\r\n\r\n    const res = await api.get(`/pokemon/${name}`);\r\n    if(res){\r\n      const response = await {\r\n        name: res.data.forms[0].name,\r\n        types: res.data.types,\r\n        sprites: res.data.sprites,\r\n        stats: res.data.stats,\r\n        abilities: res.data.abilities,\r\n        weight: res.data.weight,\r\n        height: res.data.height\r\n      }\r\n      dispatch({\r\n        type: actionsType.SET_SUCCESS_DETAIL,\r\n        payload: {\r\n          data: response,\r\n          compare,\r\n        },\r\n      });\r\n      return data;\r\n    } else {\r\n      dispatch({\r\n        type: actionsType.SET_ERROR,\r\n        payload: {\r\n          error: res,\r\n        },\r\n      })\r\n    }\r\n  }, []);\r\n\r\n  const getTypes = useCallback(async () => {\r\n    dispatch({\r\n      type: actionsType.SET_FETCHING,\r\n    });\r\n\r\n    const res = await api.get(`/type`);\r\n    if(res){\r\n      let response = res.data.results;\r\n      dispatch({\r\n        type: actionsType.SET_SUCCESS_TYPE,\r\n        payload: {\r\n          data: response,\r\n        },\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: actionsType.SET_ERROR,\r\n        payload: {\r\n          error: res,\r\n        },\r\n      })\r\n    }\r\n  }, []);\r\n\r\n  return [{ loading, error, data, details, compare, types }, {fetchData, fetchDataFilter, getDetailByName, getTypes}]\r\n}"],"sourceRoot":""}